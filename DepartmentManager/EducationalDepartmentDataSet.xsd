<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="EducationalDepartmentDataSet" targetNamespace="http://tempuri.org/EducationalDepartmentDataSet.xsd" xmlns:mstns="http://tempuri.org/EducationalDepartmentDataSet.xsd" xmlns="http://tempuri.org/EducationalDepartmentDataSet.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" GeneratorFunctionsComponentClassName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" UserFunctionsComponentName="QueriesTableAdapter" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="EducationalDepartmentConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="EducationalDepartmentConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.DepartmentManager.Properties.Settings.GlobalReference.Default.EducationalDepartmentConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="GroupsTableAdapter" GeneratorDataComponentClassName="GroupsTableAdapter" Name="Groups" UserDataComponentName="GroupsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="EducationalDepartmentConnectionString (Settings)" DbObjectName="EducationalDepartment.dbo.Groups" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Groups] WHERE (([Id] = @Original_Id) AND ([Number] = @Original_Number) AND ([PlanId] = @Original_PlanId))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Number" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Number" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_PlanId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="PlanId" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Groups] ([Number], [PlanId]) VALUES (@Number, @PlanId);
SELECT Id, Number, PlanId FROM Groups WHERE (Id = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Number" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Number" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@PlanId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="PlanId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Id, Number, PlanId FROM dbo.Groups</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Groups] SET [Number] = @Number, [PlanId] = @PlanId WHERE (([Id] = @Original_Id) AND ([Number] = @Original_Number) AND ([PlanId] = @Original_PlanId));
SELECT Id, Number, PlanId FROM Groups WHERE (Id = @Id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Number" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Number" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@PlanId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="PlanId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Number" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Number" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_PlanId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="PlanId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="Id" ColumnName="Id" DataSourceName="EducationalDepartment.dbo.Groups" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Id" DataSetColumn="Id" />
              <Mapping SourceColumn="Number" DataSetColumn="Number" />
              <Mapping SourceColumn="PlanId" DataSetColumn="PlanId" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="MarkRecordsTableAdapter" GeneratorDataComponentClassName="MarkRecordsTableAdapter" Name="MarkRecords" UserDataComponentName="MarkRecordsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="EducationalDepartmentConnectionString (Settings)" DbObjectName="EducationalDepartment.dbo.MarkRecords" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[MarkRecords] WHERE (([Id] = @Original_Id) AND ([StudentId] = @Original_StudentId) AND ([PlanContentId] = @Original_PlanContentId) AND ([Mark] = @Original_Mark))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_StudentId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="StudentId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_PlanContentId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="PlanContentId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Mark" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Mark" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[MarkRecords] ([StudentId], [PlanContentId], [Mark]) VALUES (@StudentId, @PlanContentId, @Mark);
SELECT Id, StudentId, PlanContentId, Mark FROM MarkRecords WHERE (Id = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@StudentId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="StudentId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@PlanContentId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="PlanContentId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Mark" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Mark" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Id, StudentId, PlanContentId, Mark FROM dbo.MarkRecords</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[MarkRecords] SET [StudentId] = @StudentId, [PlanContentId] = @PlanContentId, [Mark] = @Mark WHERE (([Id] = @Original_Id) AND ([StudentId] = @Original_StudentId) AND ([PlanContentId] = @Original_PlanContentId) AND ([Mark] = @Original_Mark));
SELECT Id, StudentId, PlanContentId, Mark FROM MarkRecords WHERE (Id = @Id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@StudentId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="StudentId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@PlanContentId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="PlanContentId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Mark" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Mark" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_StudentId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="StudentId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_PlanContentId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="PlanContentId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Mark" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Mark" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="Id" ColumnName="Id" DataSourceName="EducationalDepartment.dbo.MarkRecords" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Id" DataSetColumn="Id" />
              <Mapping SourceColumn="StudentId" DataSetColumn="StudentId" />
              <Mapping SourceColumn="PlanContentId" DataSetColumn="PlanContentId" />
              <Mapping SourceColumn="Mark" DataSetColumn="Mark" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="PlanContentTableAdapter" GeneratorDataComponentClassName="PlanContentTableAdapter" Name="PlanContent" UserDataComponentName="PlanContentTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="EducationalDepartmentConnectionString (Settings)" DbObjectName="EducationalDepartment.dbo.PlanContent" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[PlanContent] WHERE (([Id] = @Original_Id) AND ([PlanId] = @Original_PlanId) AND ([SubjectId] = @Original_SubjectId) AND ([LectureDuration] = @Original_LectureDuration) AND ([LabDuration] = @Original_LabDuration) AND ([CourseDuration] = @Original_CourseDuration))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_PlanId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="PlanId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_SubjectId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="SubjectId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_LectureDuration" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="LectureDuration" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_LabDuration" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="LabDuration" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_CourseDuration" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="CourseDuration" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[PlanContent] ([PlanId], [SubjectId], [LectureDuration], [LabDuration], [CourseDuration]) VALUES (@PlanId, @SubjectId, @LectureDuration, @LabDuration, @CourseDuration);
SELECT Id, PlanId, SubjectId, LectureDuration, LabDuration, CourseDuration FROM PlanContent WHERE (Id = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@PlanId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="PlanId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@SubjectId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="SubjectId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@LectureDuration" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="LectureDuration" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@LabDuration" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="LabDuration" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@CourseDuration" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="CourseDuration" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Id, PlanId, SubjectId, LectureDuration, LabDuration, CourseDuration FROM dbo.PlanContent</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[PlanContent] SET [PlanId] = @PlanId, [SubjectId] = @SubjectId, [LectureDuration] = @LectureDuration, [LabDuration] = @LabDuration, [CourseDuration] = @CourseDuration WHERE (([Id] = @Original_Id) AND ([PlanId] = @Original_PlanId) AND ([SubjectId] = @Original_SubjectId) AND ([LectureDuration] = @Original_LectureDuration) AND ([LabDuration] = @Original_LabDuration) AND ([CourseDuration] = @Original_CourseDuration));
SELECT Id, PlanId, SubjectId, LectureDuration, LabDuration, CourseDuration FROM PlanContent WHERE (Id = @Id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@PlanId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="PlanId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@SubjectId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="SubjectId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@LectureDuration" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="LectureDuration" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@LabDuration" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="LabDuration" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@CourseDuration" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="CourseDuration" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_PlanId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="PlanId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_SubjectId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="SubjectId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_LectureDuration" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="LectureDuration" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_LabDuration" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="LabDuration" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_CourseDuration" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="CourseDuration" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="Id" ColumnName="Id" DataSourceName="EducationalDepartment.dbo.PlanContent" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Id" DataSetColumn="Id" />
              <Mapping SourceColumn="PlanId" DataSetColumn="PlanId" />
              <Mapping SourceColumn="SubjectId" DataSetColumn="SubjectId" />
              <Mapping SourceColumn="LectureDuration" DataSetColumn="LectureDuration" />
              <Mapping SourceColumn="LabDuration" DataSetColumn="LabDuration" />
              <Mapping SourceColumn="CourseDuration" DataSetColumn="CourseDuration" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="PlansTableAdapter" GeneratorDataComponentClassName="PlansTableAdapter" Name="Plans" UserDataComponentName="PlansTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="EducationalDepartmentConnectionString (Settings)" DbObjectName="EducationalDepartment.dbo.Plans" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Plans] WHERE (([Id] = @Original_Id) AND ([Speciality] = @Original_Speciality) AND ([Year] = @Original_Year))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Speciality" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Speciality" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Year" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Year" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Plans] ([Speciality], [Year]) VALUES (@Speciality, @Year);
SELECT Id, Speciality, Year FROM Plans WHERE (Id = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Speciality" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Speciality" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Year" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Year" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Id, Speciality, Year FROM dbo.Plans</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Plans] SET [Speciality] = @Speciality, [Year] = @Year WHERE (([Id] = @Original_Id) AND ([Speciality] = @Original_Speciality) AND ([Year] = @Original_Year));
SELECT Id, Speciality, Year FROM Plans WHERE (Id = @Id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Speciality" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Speciality" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Year" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Year" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Speciality" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Speciality" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Year" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Year" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="Id" ColumnName="Id" DataSourceName="EducationalDepartment.dbo.Plans" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Id" DataSetColumn="Id" />
              <Mapping SourceColumn="Speciality" DataSetColumn="Speciality" />
              <Mapping SourceColumn="Year" DataSetColumn="Year" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="StudentsTableAdapter" GeneratorDataComponentClassName="StudentsTableAdapter" Name="Students" UserDataComponentName="StudentsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="EducationalDepartmentConnectionString (Settings)" DbObjectName="EducationalDepartment.dbo.Students" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Students] WHERE (([Id] = @Original_Id) AND ([FullName] = @Original_FullName) AND ([GroupId] = @Original_GroupId))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_FullName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="FullName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_GroupId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="GroupId" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Students] ([FullName], [GroupId]) VALUES (@FullName, @GroupId);
SELECT Id, FullName, GroupId FROM Students WHERE (Id = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@FullName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="FullName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@GroupId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="GroupId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Id, FullName, GroupId FROM dbo.Students</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Students] SET [FullName] = @FullName, [GroupId] = @GroupId WHERE (([Id] = @Original_Id) AND ([FullName] = @Original_FullName) AND ([GroupId] = @Original_GroupId));
SELECT Id, FullName, GroupId FROM Students WHERE (Id = @Id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@FullName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="FullName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@GroupId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="GroupId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_FullName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="FullName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_GroupId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="GroupId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="Id" ColumnName="Id" DataSourceName="EducationalDepartment.dbo.Students" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Id" DataSetColumn="Id" />
              <Mapping SourceColumn="FullName" DataSetColumn="FullName" />
              <Mapping SourceColumn="GroupId" DataSetColumn="GroupId" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="SubjectsTableAdapter" GeneratorDataComponentClassName="SubjectsTableAdapter" Name="Subjects" UserDataComponentName="SubjectsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="EducationalDepartmentConnectionString (Settings)" DbObjectName="EducationalDepartment.dbo.Subjects" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Subjects] WHERE (([Id] = @Original_Id) AND ([Name] = @Original_Name))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Subjects] ([Name]) VALUES (@Name);
SELECT Id, Name FROM Subjects WHERE (Id = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Id, Name FROM dbo.Subjects</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Subjects] SET [Name] = @Name WHERE (([Id] = @Original_Id) AND ([Name] = @Original_Name));
SELECT Id, Name FROM Subjects WHERE (Id = @Id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="Id" ColumnName="Id" DataSourceName="EducationalDepartment.dbo.Subjects" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Id" DataSetColumn="Id" />
              <Mapping SourceColumn="Name" DataSetColumn="Name" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="FullPlanTableAdapter" GeneratorDataComponentClassName="FullPlanTableAdapter" Name="FullPlan" UserDataComponentName="FullPlanTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="EducationalDepartmentConnectionString (Settings)" DbObjectName="EducationalDepartment.dbo.FullPlan" DbObjectType="View" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="false" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Speciality, Name, LectureDuration, LabDuration, CourseDuration, Year FROM dbo.FullPlan</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Speciality" DataSetColumn="Speciality" />
              <Mapping SourceColumn="Name" DataSetColumn="Name" />
              <Mapping SourceColumn="LectureDuration" DataSetColumn="LectureDuration" />
              <Mapping SourceColumn="LabDuration" DataSetColumn="LabDuration" />
              <Mapping SourceColumn="CourseDuration" DataSetColumn="CourseDuration" />
              <Mapping SourceColumn="Year" DataSetColumn="Year" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="GroupListTableAdapter" GeneratorDataComponentClassName="GroupListTableAdapter" Name="GroupList" UserDataComponentName="GroupListTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="EducationalDepartmentConnectionString (Settings)" DbObjectName="EducationalDepartment.dbo.GroupList" DbObjectType="View" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="false" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Number, FullName FROM dbo.GroupList</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Number" DataSetColumn="Number" />
              <Mapping SourceColumn="FullName" DataSetColumn="FullName" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="MarkRecordListTableAdapter" GeneratorDataComponentClassName="MarkRecordListTableAdapter" Name="MarkRecordList" UserDataComponentName="MarkRecordListTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="EducationalDepartmentConnectionString (Settings)" DbObjectName="EducationalDepartment.dbo.MarkRecordList" DbObjectType="View" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="false" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT FullName, Name, LectureDuration, LabDuration, CourseDuration, Mark FROM dbo.MarkRecordList</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="FullName" DataSetColumn="FullName" />
              <Mapping SourceColumn="Name" DataSetColumn="Name" />
              <Mapping SourceColumn="LectureDuration" DataSetColumn="LectureDuration" />
              <Mapping SourceColumn="LabDuration" DataSetColumn="LabDuration" />
              <Mapping SourceColumn="CourseDuration" DataSetColumn="CourseDuration" />
              <Mapping SourceColumn="Mark" DataSetColumn="Mark" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="ShowAllNonPlanedSubjectsTableAdapter" GeneratorDataComponentClassName="ShowAllNonPlanedSubjectsTableAdapter" Name="ShowAllNonPlanedSubjects" UserDataComponentName="ShowAllNonPlanedSubjectsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="EducationalDepartmentConnectionString (Settings)" DbObjectName="EducationalDepartment.dbo.ShowAllNonPlanedSubjects" DbObjectType="StoredProcedure" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <SelectCommand>
                  <DbCommand CommandType="StoredProcedure" ModifiedByUser="false">
                    <CommandText>dbo.ShowAllNonPlanedSubjects</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DataTypeServer="int" DbType="Int32" Direction="ReturnValue" ParameterName="@RETURN_VALUE" Precision="10" ProviderType="Int" Scale="0" Size="4" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Name" DataSetColumn="Name" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="ShowStudentsCountTableAdapter" GeneratorDataComponentClassName="ShowStudentsCountTableAdapter" Name="ShowStudentsCount" UserDataComponentName="ShowStudentsCountTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="EducationalDepartmentConnectionString (Settings)" DbObjectName="EducationalDepartment.dbo.ShowStudentsCount" DbObjectType="StoredProcedure" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <SelectCommand>
                  <DbCommand CommandType="StoredProcedure" ModifiedByUser="false">
                    <CommandText>dbo.ShowStudentsCount</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DataTypeServer="int" DbType="Int32" Direction="ReturnValue" ParameterName="@RETURN_VALUE" Precision="10" ProviderType="Int" Scale="0" Size="4" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@GroupId" Precision="10" ProviderType="Int" Scale="0" Size="4" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Column1" DataSetColumn="Column1" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="ShowSubjectsFromPlanTableAdapter" GeneratorDataComponentClassName="ShowSubjectsFromPlanTableAdapter" Name="ShowSubjectsFromPlan" UserDataComponentName="ShowSubjectsFromPlanTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="EducationalDepartmentConnectionString (Settings)" DbObjectName="EducationalDepartment.dbo.ShowSubjectsFromPlan" DbObjectType="StoredProcedure" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <SelectCommand>
                  <DbCommand CommandType="StoredProcedure" ModifiedByUser="false">
                    <CommandText>dbo.ShowSubjectsFromPlan</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DataTypeServer="int" DbType="Int32" Direction="ReturnValue" ParameterName="@RETURN_VALUE" Precision="10" ProviderType="Int" Scale="0" Size="4" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@PlanId" Precision="10" ProviderType="Int" Scale="0" Size="4" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Name" DataSetColumn="Name" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="GetListOfBadStudentsTableAdapter" GeneratorDataComponentClassName="GetListOfBadStudentsTableAdapter" Name="GetListOfBadStudents" UserDataComponentName="GetListOfBadStudentsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="EducationalDepartmentConnectionString (Settings)" DbObjectName="EducationalDepartment.dbo.GetListOfBadStudents" DbObjectType="Function" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT FullName FROM dbo.GetListOfBadStudents()</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="FullName" DataSetColumn="FullName" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="GetWorstMarksTableAdapter" GeneratorDataComponentClassName="GetWorstMarksTableAdapter" Name="GetWorstMarks" UserDataComponentName="GetWorstMarksTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="EducationalDepartmentConnectionString (Settings)" DbObjectName="EducationalDepartment.dbo.GetWorstMarks" DbObjectType="Function" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Id, StudentId, PlanContentId, Mark FROM dbo.GetWorstMarks(@StudentId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="StudentId" ColumnName="" DataSourceName="" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@StudentId" Precision="0" Scale="0" Size="0" SourceColumn="" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Id" DataSetColumn="Id" />
              <Mapping SourceColumn="StudentId" DataSetColumn="StudentId" />
              <Mapping SourceColumn="PlanContentId" DataSetColumn="PlanContentId" />
              <Mapping SourceColumn="Mark" DataSetColumn="Mark" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources>
          <DbSource ConnectionRef="EducationalDepartmentConnectionString (Settings)" DbObjectName="EducationalDepartment.dbo.AddNewStudent" DbObjectType="StoredProcedure" GenerateShortCommands="true" GeneratorSourceName="AddNewStudent" MethodsParameterType="CLR" Modifier="Public" Name="AddNewStudent" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy" UserSourceName="AddNewStudent">
            <SelectCommand>
              <DbCommand CommandType="StoredProcedure" ModifiedByUser="false">
                <CommandText>dbo.AddNewStudent</CommandText>
                <Parameters>
                  <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DataTypeServer="int" DbType="Int32" Direction="ReturnValue" ParameterName="@RETURN_VALUE" Precision="10" ProviderType="Int" Scale="0" Size="4" SourceColumnNullMapping="false" SourceVersion="Current" />
                  <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DataTypeServer="nvarchar" DbType="String" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="25" SourceColumnNullMapping="false" SourceVersion="Current" />
                  <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@GroupId" Precision="10" ProviderType="Int" Scale="0" Size="4" SourceColumnNullMapping="false" SourceVersion="Current" />
                  <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DataTypeServer="int" DbType="Int32" Direction="InputOutput" ParameterName="@Id" Precision="10" ProviderType="Int" Scale="0" Size="4" SourceColumnNullMapping="false" SourceVersion="Current" />
                </Parameters>
              </DbCommand>
            </SelectCommand>
          </DbSource>
          <DbSource ConnectionRef="EducationalDepartmentConnectionString (Settings)" DbObjectName="EducationalDepartment.dbo.GetAverageMark" DbObjectType="Function" GenerateShortCommands="true" GeneratorSourceName="GetAverageMark" MethodsParameterType="CLR" Modifier="Public" Name="GetAverageMark" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy1" UserSourceName="GetAverageMark">
            <SelectCommand>
              <DbCommand CommandType="StoredProcedure" ModifiedByUser="false">
                <CommandText>dbo.GetAverageMark</CommandText>
                <Parameters>
                  <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DataTypeServer="real" DbType="Single" Direction="ReturnValue" ParameterName="@RETURN_VALUE" Precision="24" ProviderType="Real" Scale="0" Size="4" SourceColumnNullMapping="false" SourceVersion="Current" />
                  <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@StudentId" Precision="10" ProviderType="Int" Scale="0" Size="4" SourceColumnNullMapping="false" SourceVersion="Current" />
                </Parameters>
              </DbCommand>
            </SelectCommand>
          </DbSource>
        </Sources>
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="EducationalDepartmentDataSet" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_DataSetName="EducationalDepartmentDataSet" msprop:Generator_UserDSName="EducationalDepartmentDataSet">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="Groups" msprop:Generator_TableClassName="GroupsDataTable" msprop:Generator_TableVarName="tableGroups" msprop:Generator_TablePropName="Groups" msprop:Generator_RowDeletingName="GroupsRowDeleting" msprop:Generator_RowChangingName="GroupsRowChanging" msprop:Generator_RowEvHandlerName="GroupsRowChangeEventHandler" msprop:Generator_RowDeletedName="GroupsRowDeleted" msprop:Generator_UserTableName="Groups" msprop:Generator_RowChangedName="GroupsRowChanged" msprop:Generator_RowEvArgName="GroupsRowChangeEvent" msprop:Generator_RowClassName="GroupsRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Id" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnId" msprop:Generator_ColumnPropNameInRow="Id" msprop:Generator_ColumnPropNameInTable="IdColumn" msprop:Generator_UserColumnName="Id" type="xs:int" />
              <xs:element name="Number" msprop:Generator_ColumnVarNameInTable="columnNumber" msprop:Generator_ColumnPropNameInRow="Number" msprop:Generator_ColumnPropNameInTable="NumberColumn" msprop:Generator_UserColumnName="Number" type="xs:int" />
              <xs:element name="PlanId" msprop:Generator_ColumnVarNameInTable="columnPlanId" msprop:Generator_ColumnPropNameInRow="PlanId" msprop:Generator_ColumnPropNameInTable="PlanIdColumn" msprop:Generator_UserColumnName="PlanId" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="MarkRecords" msprop:Generator_TableClassName="MarkRecordsDataTable" msprop:Generator_TableVarName="tableMarkRecords" msprop:Generator_TablePropName="MarkRecords" msprop:Generator_RowDeletingName="MarkRecordsRowDeleting" msprop:Generator_RowChangingName="MarkRecordsRowChanging" msprop:Generator_RowEvHandlerName="MarkRecordsRowChangeEventHandler" msprop:Generator_RowDeletedName="MarkRecordsRowDeleted" msprop:Generator_UserTableName="MarkRecords" msprop:Generator_RowChangedName="MarkRecordsRowChanged" msprop:Generator_RowEvArgName="MarkRecordsRowChangeEvent" msprop:Generator_RowClassName="MarkRecordsRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Id" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnId" msprop:Generator_ColumnPropNameInRow="Id" msprop:Generator_ColumnPropNameInTable="IdColumn" msprop:Generator_UserColumnName="Id" type="xs:int" />
              <xs:element name="StudentId" msprop:Generator_ColumnVarNameInTable="columnStudentId" msprop:Generator_ColumnPropNameInRow="StudentId" msprop:Generator_ColumnPropNameInTable="StudentIdColumn" msprop:Generator_UserColumnName="StudentId" type="xs:int" />
              <xs:element name="PlanContentId" msprop:Generator_ColumnVarNameInTable="columnPlanContentId" msprop:Generator_ColumnPropNameInRow="PlanContentId" msprop:Generator_ColumnPropNameInTable="PlanContentIdColumn" msprop:Generator_UserColumnName="PlanContentId" type="xs:int" />
              <xs:element name="Mark" msprop:Generator_ColumnVarNameInTable="columnMark" msprop:Generator_ColumnPropNameInRow="Mark" msprop:Generator_ColumnPropNameInTable="MarkColumn" msprop:Generator_UserColumnName="Mark" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="PlanContent" msprop:Generator_TableClassName="PlanContentDataTable" msprop:Generator_TableVarName="tablePlanContent" msprop:Generator_TablePropName="PlanContent" msprop:Generator_RowDeletingName="PlanContentRowDeleting" msprop:Generator_RowChangingName="PlanContentRowChanging" msprop:Generator_RowEvHandlerName="PlanContentRowChangeEventHandler" msprop:Generator_RowDeletedName="PlanContentRowDeleted" msprop:Generator_UserTableName="PlanContent" msprop:Generator_RowChangedName="PlanContentRowChanged" msprop:Generator_RowEvArgName="PlanContentRowChangeEvent" msprop:Generator_RowClassName="PlanContentRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Id" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnId" msprop:Generator_ColumnPropNameInRow="Id" msprop:Generator_ColumnPropNameInTable="IdColumn" msprop:Generator_UserColumnName="Id" type="xs:int" />
              <xs:element name="PlanId" msprop:Generator_ColumnVarNameInTable="columnPlanId" msprop:Generator_ColumnPropNameInRow="PlanId" msprop:Generator_ColumnPropNameInTable="PlanIdColumn" msprop:Generator_UserColumnName="PlanId" type="xs:int" />
              <xs:element name="SubjectId" msprop:Generator_ColumnVarNameInTable="columnSubjectId" msprop:Generator_ColumnPropNameInRow="SubjectId" msprop:Generator_ColumnPropNameInTable="SubjectIdColumn" msprop:Generator_UserColumnName="SubjectId" type="xs:int" />
              <xs:element name="LectureDuration" msprop:Generator_ColumnVarNameInTable="columnLectureDuration" msprop:Generator_ColumnPropNameInRow="LectureDuration" msprop:Generator_ColumnPropNameInTable="LectureDurationColumn" msprop:Generator_UserColumnName="LectureDuration" type="xs:int" />
              <xs:element name="LabDuration" msprop:Generator_ColumnVarNameInTable="columnLabDuration" msprop:Generator_ColumnPropNameInRow="LabDuration" msprop:Generator_ColumnPropNameInTable="LabDurationColumn" msprop:Generator_UserColumnName="LabDuration" type="xs:int" />
              <xs:element name="CourseDuration" msprop:Generator_ColumnVarNameInTable="columnCourseDuration" msprop:Generator_ColumnPropNameInRow="CourseDuration" msprop:Generator_ColumnPropNameInTable="CourseDurationColumn" msprop:Generator_UserColumnName="CourseDuration" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Plans" msprop:Generator_TableClassName="PlansDataTable" msprop:Generator_TableVarName="tablePlans" msprop:Generator_TablePropName="Plans" msprop:Generator_RowDeletingName="PlansRowDeleting" msprop:Generator_RowChangingName="PlansRowChanging" msprop:Generator_RowEvHandlerName="PlansRowChangeEventHandler" msprop:Generator_RowDeletedName="PlansRowDeleted" msprop:Generator_UserTableName="Plans" msprop:Generator_RowChangedName="PlansRowChanged" msprop:Generator_RowEvArgName="PlansRowChangeEvent" msprop:Generator_RowClassName="PlansRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Id" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnId" msprop:Generator_ColumnPropNameInRow="Id" msprop:Generator_ColumnPropNameInTable="IdColumn" msprop:Generator_UserColumnName="Id" type="xs:int" />
              <xs:element name="Speciality" msprop:Generator_ColumnVarNameInTable="columnSpeciality" msprop:Generator_ColumnPropNameInRow="Speciality" msprop:Generator_ColumnPropNameInTable="SpecialityColumn" msprop:Generator_UserColumnName="Speciality">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="75" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Year" msprop:Generator_ColumnVarNameInTable="columnYear" msprop:Generator_ColumnPropNameInRow="Year" msprop:Generator_ColumnPropNameInTable="YearColumn" msprop:Generator_UserColumnName="Year" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Students" msprop:Generator_TableClassName="StudentsDataTable" msprop:Generator_TableVarName="tableStudents" msprop:Generator_TablePropName="Students" msprop:Generator_RowDeletingName="StudentsRowDeleting" msprop:Generator_RowChangingName="StudentsRowChanging" msprop:Generator_RowEvHandlerName="StudentsRowChangeEventHandler" msprop:Generator_RowDeletedName="StudentsRowDeleted" msprop:Generator_UserTableName="Students" msprop:Generator_RowChangedName="StudentsRowChanged" msprop:Generator_RowEvArgName="StudentsRowChangeEvent" msprop:Generator_RowClassName="StudentsRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Id" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnId" msprop:Generator_ColumnPropNameInRow="Id" msprop:Generator_ColumnPropNameInTable="IdColumn" msprop:Generator_UserColumnName="Id" type="xs:int" />
              <xs:element name="FullName" msprop:Generator_ColumnVarNameInTable="columnFullName" msprop:Generator_ColumnPropNameInRow="FullName" msprop:Generator_ColumnPropNameInTable="FullNameColumn" msprop:Generator_UserColumnName="FullName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="25" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="GroupId" msprop:Generator_ColumnVarNameInTable="columnGroupId" msprop:Generator_ColumnPropNameInRow="GroupId" msprop:Generator_ColumnPropNameInTable="GroupIdColumn" msprop:Generator_UserColumnName="GroupId" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Subjects" msprop:Generator_TableClassName="SubjectsDataTable" msprop:Generator_TableVarName="tableSubjects" msprop:Generator_TablePropName="Subjects" msprop:Generator_RowDeletingName="SubjectsRowDeleting" msprop:Generator_RowChangingName="SubjectsRowChanging" msprop:Generator_RowEvHandlerName="SubjectsRowChangeEventHandler" msprop:Generator_RowDeletedName="SubjectsRowDeleted" msprop:Generator_UserTableName="Subjects" msprop:Generator_RowChangedName="SubjectsRowChanged" msprop:Generator_RowEvArgName="SubjectsRowChangeEvent" msprop:Generator_RowClassName="SubjectsRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Id" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnId" msprop:Generator_ColumnPropNameInRow="Id" msprop:Generator_ColumnPropNameInTable="IdColumn" msprop:Generator_UserColumnName="Id" type="xs:int" />
              <xs:element name="Name" msprop:Generator_ColumnVarNameInTable="columnName" msprop:Generator_ColumnPropNameInRow="Name" msprop:Generator_ColumnPropNameInTable="NameColumn" msprop:Generator_UserColumnName="Name">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="75" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="FullPlan" msprop:Generator_TableClassName="FullPlanDataTable" msprop:Generator_TableVarName="tableFullPlan" msprop:Generator_TablePropName="FullPlan" msprop:Generator_RowDeletingName="FullPlanRowDeleting" msprop:Generator_RowChangingName="FullPlanRowChanging" msprop:Generator_RowEvHandlerName="FullPlanRowChangeEventHandler" msprop:Generator_RowDeletedName="FullPlanRowDeleted" msprop:Generator_UserTableName="FullPlan" msprop:Generator_RowChangedName="FullPlanRowChanged" msprop:Generator_RowEvArgName="FullPlanRowChangeEvent" msprop:Generator_RowClassName="FullPlanRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Speciality" msprop:Generator_ColumnVarNameInTable="columnSpeciality" msprop:Generator_ColumnPropNameInRow="Speciality" msprop:Generator_ColumnPropNameInTable="SpecialityColumn" msprop:Generator_UserColumnName="Speciality">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="75" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Name" msprop:Generator_ColumnVarNameInTable="columnName" msprop:Generator_ColumnPropNameInRow="Name" msprop:Generator_ColumnPropNameInTable="NameColumn" msprop:Generator_UserColumnName="Name">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="75" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="LectureDuration" msprop:Generator_ColumnVarNameInTable="columnLectureDuration" msprop:Generator_ColumnPropNameInRow="LectureDuration" msprop:Generator_ColumnPropNameInTable="LectureDurationColumn" msprop:Generator_UserColumnName="LectureDuration" type="xs:int" />
              <xs:element name="LabDuration" msprop:Generator_ColumnVarNameInTable="columnLabDuration" msprop:Generator_ColumnPropNameInRow="LabDuration" msprop:Generator_ColumnPropNameInTable="LabDurationColumn" msprop:Generator_UserColumnName="LabDuration" type="xs:int" />
              <xs:element name="CourseDuration" msprop:Generator_ColumnVarNameInTable="columnCourseDuration" msprop:Generator_ColumnPropNameInRow="CourseDuration" msprop:Generator_ColumnPropNameInTable="CourseDurationColumn" msprop:Generator_UserColumnName="CourseDuration" type="xs:int" />
              <xs:element name="Year" msprop:Generator_ColumnVarNameInTable="columnYear" msprop:Generator_ColumnPropNameInRow="Year" msprop:Generator_ColumnPropNameInTable="YearColumn" msprop:Generator_UserColumnName="Year" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="GroupList" msprop:Generator_TableClassName="GroupListDataTable" msprop:Generator_TableVarName="tableGroupList" msprop:Generator_TablePropName="GroupList" msprop:Generator_RowDeletingName="GroupListRowDeleting" msprop:Generator_RowChangingName="GroupListRowChanging" msprop:Generator_RowEvHandlerName="GroupListRowChangeEventHandler" msprop:Generator_RowDeletedName="GroupListRowDeleted" msprop:Generator_UserTableName="GroupList" msprop:Generator_RowChangedName="GroupListRowChanged" msprop:Generator_RowEvArgName="GroupListRowChangeEvent" msprop:Generator_RowClassName="GroupListRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Number" msprop:Generator_ColumnVarNameInTable="columnNumber" msprop:Generator_ColumnPropNameInRow="Number" msprop:Generator_ColumnPropNameInTable="NumberColumn" msprop:Generator_UserColumnName="Number" type="xs:int" />
              <xs:element name="FullName" msprop:Generator_ColumnVarNameInTable="columnFullName" msprop:Generator_ColumnPropNameInRow="FullName" msprop:Generator_ColumnPropNameInTable="FullNameColumn" msprop:Generator_UserColumnName="FullName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="25" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="MarkRecordList" msprop:Generator_TableClassName="MarkRecordListDataTable" msprop:Generator_TableVarName="tableMarkRecordList" msprop:Generator_TablePropName="MarkRecordList" msprop:Generator_RowDeletingName="MarkRecordListRowDeleting" msprop:Generator_RowChangingName="MarkRecordListRowChanging" msprop:Generator_RowEvHandlerName="MarkRecordListRowChangeEventHandler" msprop:Generator_RowDeletedName="MarkRecordListRowDeleted" msprop:Generator_UserTableName="MarkRecordList" msprop:Generator_RowChangedName="MarkRecordListRowChanged" msprop:Generator_RowEvArgName="MarkRecordListRowChangeEvent" msprop:Generator_RowClassName="MarkRecordListRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="FullName" msprop:Generator_ColumnVarNameInTable="columnFullName" msprop:Generator_ColumnPropNameInRow="FullName" msprop:Generator_ColumnPropNameInTable="FullNameColumn" msprop:Generator_UserColumnName="FullName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="25" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Name" msprop:Generator_ColumnVarNameInTable="columnName" msprop:Generator_ColumnPropNameInRow="Name" msprop:Generator_ColumnPropNameInTable="NameColumn" msprop:Generator_UserColumnName="Name">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="75" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="LectureDuration" msprop:Generator_ColumnVarNameInTable="columnLectureDuration" msprop:Generator_ColumnPropNameInRow="LectureDuration" msprop:Generator_ColumnPropNameInTable="LectureDurationColumn" msprop:Generator_UserColumnName="LectureDuration" type="xs:int" />
              <xs:element name="LabDuration" msprop:Generator_ColumnVarNameInTable="columnLabDuration" msprop:Generator_ColumnPropNameInRow="LabDuration" msprop:Generator_ColumnPropNameInTable="LabDurationColumn" msprop:Generator_UserColumnName="LabDuration" type="xs:int" />
              <xs:element name="CourseDuration" msprop:Generator_ColumnVarNameInTable="columnCourseDuration" msprop:Generator_ColumnPropNameInRow="CourseDuration" msprop:Generator_ColumnPropNameInTable="CourseDurationColumn" msprop:Generator_UserColumnName="CourseDuration" type="xs:int" />
              <xs:element name="Mark" msprop:Generator_ColumnVarNameInTable="columnMark" msprop:Generator_ColumnPropNameInRow="Mark" msprop:Generator_ColumnPropNameInTable="MarkColumn" msprop:Generator_UserColumnName="Mark" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="ShowAllNonPlanedSubjects" msprop:Generator_TableClassName="ShowAllNonPlanedSubjectsDataTable" msprop:Generator_TableVarName="tableShowAllNonPlanedSubjects" msprop:Generator_TablePropName="ShowAllNonPlanedSubjects" msprop:Generator_RowDeletingName="ShowAllNonPlanedSubjectsRowDeleting" msprop:Generator_RowChangingName="ShowAllNonPlanedSubjectsRowChanging" msprop:Generator_RowEvHandlerName="ShowAllNonPlanedSubjectsRowChangeEventHandler" msprop:Generator_RowDeletedName="ShowAllNonPlanedSubjectsRowDeleted" msprop:Generator_UserTableName="ShowAllNonPlanedSubjects" msprop:Generator_RowChangedName="ShowAllNonPlanedSubjectsRowChanged" msprop:Generator_RowEvArgName="ShowAllNonPlanedSubjectsRowChangeEvent" msprop:Generator_RowClassName="ShowAllNonPlanedSubjectsRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Name" msprop:Generator_ColumnVarNameInTable="columnName" msprop:Generator_ColumnPropNameInRow="Name" msprop:Generator_ColumnPropNameInTable="NameColumn" msprop:Generator_UserColumnName="Name">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="75" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="ShowStudentsCount" msprop:Generator_TableClassName="ShowStudentsCountDataTable" msprop:Generator_TableVarName="tableShowStudentsCount" msprop:Generator_TablePropName="ShowStudentsCount" msprop:Generator_RowDeletingName="ShowStudentsCountRowDeleting" msprop:Generator_RowChangingName="ShowStudentsCountRowChanging" msprop:Generator_RowEvHandlerName="ShowStudentsCountRowChangeEventHandler" msprop:Generator_RowDeletedName="ShowStudentsCountRowDeleted" msprop:Generator_UserTableName="ShowStudentsCount" msprop:Generator_RowChangedName="ShowStudentsCountRowChanged" msprop:Generator_RowEvArgName="ShowStudentsCountRowChangeEvent" msprop:Generator_RowClassName="ShowStudentsCountRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Column1" msdata:ReadOnly="true" msprop:Generator_ColumnVarNameInTable="columnColumn1" msprop:Generator_ColumnPropNameInRow="Column1" msprop:Generator_ColumnPropNameInTable="Column1Column" msprop:Generator_UserColumnName="Column1" type="xs:int" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="ShowSubjectsFromPlan" msprop:Generator_TableClassName="ShowSubjectsFromPlanDataTable" msprop:Generator_TableVarName="tableShowSubjectsFromPlan" msprop:Generator_TablePropName="ShowSubjectsFromPlan" msprop:Generator_RowDeletingName="ShowSubjectsFromPlanRowDeleting" msprop:Generator_RowChangingName="ShowSubjectsFromPlanRowChanging" msprop:Generator_RowEvHandlerName="ShowSubjectsFromPlanRowChangeEventHandler" msprop:Generator_RowDeletedName="ShowSubjectsFromPlanRowDeleted" msprop:Generator_UserTableName="ShowSubjectsFromPlan" msprop:Generator_RowChangedName="ShowSubjectsFromPlanRowChanged" msprop:Generator_RowEvArgName="ShowSubjectsFromPlanRowChangeEvent" msprop:Generator_RowClassName="ShowSubjectsFromPlanRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Name" msprop:Generator_ColumnVarNameInTable="columnName" msprop:Generator_ColumnPropNameInRow="Name" msprop:Generator_ColumnPropNameInTable="NameColumn" msprop:Generator_UserColumnName="Name">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="75" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="GetListOfBadStudents" msprop:Generator_TableClassName="GetListOfBadStudentsDataTable" msprop:Generator_TableVarName="tableGetListOfBadStudents" msprop:Generator_TablePropName="GetListOfBadStudents" msprop:Generator_RowDeletingName="GetListOfBadStudentsRowDeleting" msprop:Generator_RowChangingName="GetListOfBadStudentsRowChanging" msprop:Generator_RowEvHandlerName="GetListOfBadStudentsRowChangeEventHandler" msprop:Generator_RowDeletedName="GetListOfBadStudentsRowDeleted" msprop:Generator_UserTableName="GetListOfBadStudents" msprop:Generator_RowChangedName="GetListOfBadStudentsRowChanged" msprop:Generator_RowEvArgName="GetListOfBadStudentsRowChangeEvent" msprop:Generator_RowClassName="GetListOfBadStudentsRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="FullName" msprop:Generator_ColumnVarNameInTable="columnFullName" msprop:Generator_ColumnPropNameInRow="FullName" msprop:Generator_ColumnPropNameInTable="FullNameColumn" msprop:Generator_UserColumnName="FullName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="25" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="GetWorstMarks" msprop:Generator_TableClassName="GetWorstMarksDataTable" msprop:Generator_TableVarName="tableGetWorstMarks" msprop:Generator_TablePropName="GetWorstMarks" msprop:Generator_RowDeletingName="GetWorstMarksRowDeleting" msprop:Generator_RowChangingName="GetWorstMarksRowChanging" msprop:Generator_RowEvHandlerName="GetWorstMarksRowChangeEventHandler" msprop:Generator_RowDeletedName="GetWorstMarksRowDeleted" msprop:Generator_UserTableName="GetWorstMarks" msprop:Generator_RowChangedName="GetWorstMarksRowChanged" msprop:Generator_RowEvArgName="GetWorstMarksRowChangeEvent" msprop:Generator_RowClassName="GetWorstMarksRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Id" msprop:Generator_ColumnVarNameInTable="columnId" msprop:Generator_ColumnPropNameInRow="Id" msprop:Generator_ColumnPropNameInTable="IdColumn" msprop:Generator_UserColumnName="Id" type="xs:int" />
              <xs:element name="StudentId" msprop:Generator_ColumnVarNameInTable="columnStudentId" msprop:Generator_ColumnPropNameInRow="StudentId" msprop:Generator_ColumnPropNameInTable="StudentIdColumn" msprop:Generator_UserColumnName="StudentId" type="xs:int" />
              <xs:element name="PlanContentId" msprop:Generator_ColumnVarNameInTable="columnPlanContentId" msprop:Generator_ColumnPropNameInRow="PlanContentId" msprop:Generator_ColumnPropNameInTable="PlanContentIdColumn" msprop:Generator_UserColumnName="PlanContentId" type="xs:int" />
              <xs:element name="Mark" msprop:Generator_ColumnVarNameInTable="columnMark" msprop:Generator_ColumnPropNameInRow="Mark" msprop:Generator_ColumnPropNameInTable="MarkColumn" msprop:Generator_UserColumnName="Mark" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Groups" />
      <xs:field xpath="mstns:Id" />
    </xs:unique>
    <xs:unique name="MarkRecords_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:MarkRecords" />
      <xs:field xpath="mstns:Id" />
    </xs:unique>
    <xs:unique name="PlanContent_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:PlanContent" />
      <xs:field xpath="mstns:Id" />
    </xs:unique>
    <xs:unique name="Plans_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Plans" />
      <xs:field xpath="mstns:Id" />
    </xs:unique>
    <xs:unique name="Students_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Students" />
      <xs:field xpath="mstns:Id" />
    </xs:unique>
    <xs:unique name="Subjects_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Subjects" />
      <xs:field xpath="mstns:Id" />
    </xs:unique>
    <xs:unique name="GetWorstMarks_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:GetWorstMarks" />
      <xs:field xpath="mstns:Id" />
    </xs:unique>
  </xs:element>
  <xs:annotation>
    <xs:appinfo>
      <msdata:Relationship name="FK_Groups_Plans" msdata:parent="Plans" msdata:child="Groups" msdata:parentkey="Id" msdata:childkey="PlanId" msprop:Generator_UserChildTable="Groups" msprop:Generator_ChildPropName="GetGroupsRows" msprop:Generator_UserRelationName="FK_Groups_Plans" msprop:Generator_RelationVarName="relationFK_Groups_Plans" msprop:Generator_UserParentTable="Plans" msprop:Generator_ParentPropName="PlansRow" />
      <msdata:Relationship name="FK_MarkRecords_PlanContent" msdata:parent="PlanContent" msdata:child="MarkRecords" msdata:parentkey="Id" msdata:childkey="PlanContentId" msprop:Generator_UserChildTable="MarkRecords" msprop:Generator_ChildPropName="GetMarkRecordsRows" msprop:Generator_UserRelationName="FK_MarkRecords_PlanContent" msprop:Generator_RelationVarName="relationFK_MarkRecords_PlanContent" msprop:Generator_UserParentTable="PlanContent" msprop:Generator_ParentPropName="PlanContentRow" />
      <msdata:Relationship name="FK_MarkRecords_Students" msdata:parent="Students" msdata:child="MarkRecords" msdata:parentkey="Id" msdata:childkey="StudentId" msprop:Generator_UserChildTable="MarkRecords" msprop:Generator_ChildPropName="GetMarkRecordsRows" msprop:Generator_UserRelationName="FK_MarkRecords_Students" msprop:Generator_RelationVarName="relationFK_MarkRecords_Students" msprop:Generator_UserParentTable="Students" msprop:Generator_ParentPropName="StudentsRow" />
      <msdata:Relationship name="FK_PlanContent_Plans" msdata:parent="Plans" msdata:child="PlanContent" msdata:parentkey="Id" msdata:childkey="PlanId" msprop:Generator_UserChildTable="PlanContent" msprop:Generator_ChildPropName="GetPlanContentRows" msprop:Generator_UserRelationName="FK_PlanContent_Plans" msprop:Generator_RelationVarName="relationFK_PlanContent_Plans" msprop:Generator_UserParentTable="Plans" msprop:Generator_ParentPropName="PlansRow" />
      <msdata:Relationship name="FK_PlanContent_Subjects" msdata:parent="Subjects" msdata:child="PlanContent" msdata:parentkey="Id" msdata:childkey="SubjectId" msprop:Generator_UserChildTable="PlanContent" msprop:Generator_ChildPropName="GetPlanContentRows" msprop:Generator_UserRelationName="FK_PlanContent_Subjects" msprop:Generator_RelationVarName="relationFK_PlanContent_Subjects" msprop:Generator_UserParentTable="Subjects" msprop:Generator_ParentPropName="SubjectsRow" />
      <msdata:Relationship name="FK_Students_Groups" msdata:parent="Groups" msdata:child="Students" msdata:parentkey="Id" msdata:childkey="GroupId" msprop:Generator_UserChildTable="Students" msprop:Generator_ChildPropName="GetStudentsRows" msprop:Generator_UserRelationName="FK_Students_Groups" msprop:Generator_ParentPropName="GroupsRow" msprop:Generator_RelationVarName="relationFK_Students_Groups" msprop:Generator_UserParentTable="Groups" />
    </xs:appinfo>
  </xs:annotation>
</xs:schema>